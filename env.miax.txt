Comment: ******************************************************************************
Comment: This Include Script runs an app with specified environment variables
Comment: ******************************************************************************
 
Comment: ******************************
Comment: Pass these variables as input:
Comment: ******************************
Comment: $ENVIRONMENT$: All environment variables, together with their values
Comment: $COMMAND$: Job to execute, including all command line parameters
Comment: $COMMAND_DESCRIPTION$: Human readable description of job, $NEWLINE$ delimited detail line
 
Comment: ************
Comment: Return value
Comment: ************
Comment: 0 indicates success, other values indicate failure
Comment: If user selects Cancel upon failure, this script shall not return
 
 
Comment: Generate fresh file names
Generate GUID into Variable ENV_TASK
Comment: Upate textual progress variable
Set Variable PROGRESSTEXT to $COMMAND_DESCRIPTION$
Parse String $COMMAND_DESCRIPTION$ into Variables COMMAND_DESCRIPTION and  (Split at first occurrence of pattern)
Comment: Use Bash shell to run actual task
Write into Text File $SUPPORTDIR$$ENV_TASK$.sh from Value #!/bin/bash (at end of file)
Comment: Redirect both stdout and stderr to temporary log file
Write into Text File $SUPPORTDIR$$ENV_TASK$.sh from Value $ENVIRONMENT$ $COMMAND$ 2>&1 (at end of file)
Add Read Write Execute Permissions to File System Object "$SUPPORTDIR$$ENV_TASK$.sh" for Other Owner Group 
Comment: Run task
Run Program /bin/bash "$SUPPORTDIR$$ENV_TASK$.sh" (WAIT, get result into variable ENV_RESULT)
if Variable ABORT Equals TRUE
  Comment: Files placed in $SUPPORTDIR$ are automatically removed when setup quits
  Terminate Installation
end
if Variable ENV_RESULT not Equals 0
  MessageBox: $TITLE$, $COMMAND_DESCRIPTION$ Failed!$NEWLINE$$NEWLINE$Please consider changing your launch options, and try again.$NEWLINE$$NEWLINE$Error code: $ENV_RESULT$$NEWLINE$
end
Return from Include Script with result $ENV_RESULT$
 
